Constructor in java

is a special block of code that helps us give initial value to the
fields of a class. initialization of object or instance


Why we should use a Constructor
1. when we use the constructor to initialize the object
it looks more readable and cleaner.
2. if the fields of a class are private is not possible access them
outside of a class without constructor or a method which means we can't
initilize them without a method or a constructor.
3. we cam enforce rules like what kind of values are assigned to variables
with the help of a constructor
4.if we want to make sure that some lines of code should always
be executed when the object of a class is created we can
put that code inside the constructor

How to use Constructor
we create constructor inside the class and when the object
of the class is created the constructor is executed automatically
class Car{
String make;
String model;
Car(String carMake, String carModel){
make=carMake;
model=carModel;
}
public static void main(String[] args{
Car bmw=new Car("BMW","m4");
}
}
Rules:
1) constructors don't have return types not even void;
2. the name of the constructor should always
be same as name of the class
3. constructor can't be created with a static keyword
4. we can use any access modifiers with constructor
5.if we don't write a constructor in a class a default
constructor with zero paramiters is created by compiler(takes the code
written by us and it converts that code to byte code which
is easier for java to understand)

This keyword:
we can use "this" to access the instance variables when you have same name variables
in your method or constructor or any block of code

this()
Calls the constructor of a class inside other constructor;
why we should use because it help us reuse already written constructor if they
contain same code
why we want to create multiple constructor on the first place because we want give end user
flexibility that he can create the objects of our class in many ways
