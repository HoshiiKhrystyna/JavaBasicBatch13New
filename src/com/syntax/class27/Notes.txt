Collections framework:
is a just a collection of interface and classes that have many methods
to store and manipulate real life day to day data
Why we should learn Collections frameworks:
contains the classes that have pre-build methods to store and manipulate
the data.These methods are battle tested(very well tested something
we can use in production environment).
How can we use the Collections framework:
They are same classes just like anyother class in java. We create the object
of the class and start calling the methods we just need to take care of
the diamond operator. We put the name of the class inside the diamond
operator <> whoes objects we will be storing inside these classes
for example for Strings and ArrayList the syntax is ArrayList<String> objName=new ArrayList();
What are wrapper classes:
They are special classes built to work with collections framework which are replica of
primitive data types but they are classes means we can use them just like any other
class we can have methods.
Boxing and unboxing in wrapper classes:
When we convert a primitive to a non primitive wrapper class like Integer we call it boxing
This convertion can happen automatically and we can also call explicit methods to convert
primitives to non primitives.
in the case of auto its called auto boxing and in autoboxing we just assign the data and
it is converted automatically while in simple we need to call a method to convert it.
Unboxing and auto boxing is simple the reverse of it.
Downside of framework:
1. we need to use the wrapper(obhortka) classes with collections framework
2. int num vs integer num Wrapper classes occupy 4 times more memory as compared to
primitive.But as a tester we don't need to worry too much about these wrapper classes
==============================================================
List is the first interface that we will be discussing from the collections framework:
List:
1. we can store duplicates data
2. insertion order is maintained(poryadok vstavky zberihayet'sya)
ArrayList:
-LinkedListClass:
joining in a mint(pryyednatysya do monetnoho dvory)
Difference between ArrayList and LinkedList:
ArrayList:
Upside:Retrieval(get operation)(poshyk) of elements is super fast
Downside:Adding elements in the middle or start will be very expensive.
LinkedList:
Upside:whenever we have to insert(vstavyty) the data randomly, not at the last index
 we should be using
linklist
Downside:retrieval is super ,super slow if the list is big;







